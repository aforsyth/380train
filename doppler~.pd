#N canvas 22 23 1154 817 10;
#X obj 114 135 inlet~ signal;
#X obj 91 688 outlet~ signal;
#X obj 283 373 inlet distance;
#X obj 114 181 delwrite~ \$0-doppler1 10000;
#X obj 283 518 vd~ \$0-doppler1;
#X text 389 367 Distance d between sound source and listener (m),
f 25;
#X text 28 8 [doppler~] simulates the Doppler effect that occurs when
the distance between a sound source and a listener changes dynamically
\, either because the sound source is moving \, or the listener \,
or both. The sound source is represented by the signal at the left
inlet \, while the current distance between source and listener is
expected at the right inlet. The pitch-shifted signal is produced at
the outlet.;
#X text 31 114 No dependencies or creation arguments;
#X obj 285 451 sig~;
#X obj 282 425 * 1000;
#X obj 284 478 lop~ 5;
#X obj 283 399 / 343;
#X obj 468 81 inlet trigger;
#X text 469 62 Drive-by trigger;
#X text 108 479 smooth with low pass filter;
#X text 48 373 compute the delay (in milliseconds);
#X text 43 413 delay = distance / (speed of sound);
#X msg 391 431 clear;
#X text 381 593 Bonus points if you manage to toggle between two [delwrite~]/[vd~]
pairs \, such that triggering another flyby will not result in a temporary
pitch warp (http://puredata.hurleur.com/sujet-176-clearing-delay-lines)
, f 42;
#X text 87 216 read from a delay line with a variable delay to create
doppler shift sound;
#X text 441 425 on triggering a new drive-by \, clear the low pass
filter to instantly take on the new value - this helps reduce the feeling
of pitch warp;
#X connect 0 0 3 0;
#X connect 2 0 11 0;
#X connect 4 0 1 0;
#X connect 8 0 10 0;
#X connect 9 0 8 0;
#X connect 10 0 4 0;
#X connect 11 0 9 0;
#X connect 12 0 17 0;
#X connect 17 0 10 0;
